env_builder_node: 
  ros__parameters:
    origin_grid: [0.0, 0.0, 0.0] # origin of the voxel grid
    dimension_grid: [5.0, 5.0, 5.0] # dimensions in meters
    vox_size: 0.300000 # voxel size of the grid
    free_grid: true # if true the grid is initialized to free instead of unknown
  
    multi_obst_size: false # if false, use size_obst as a common size for all obstacles; otherwise use size_obst_multi to define the size of each obstacle
    multi_obst_position: true # if false, generate positions randomly using normal distribution, if true use position_obst_multi to define the position of each obstacle
    range_obst: [3.0, 3.0, 0.0] # area on the map where to generate obstacles, always positive numbers to move it around, use the origin_obst variable
    origin_obst: [1.0, 1.0, 0.0] # origin of the area where we generate the obstacles
    size_obst: [0.01, 0.01, 0.01] # height x width x length
    n_obst: 3 # 225, 180, 135, 90, number of obstacles (only used if we want to use random generation, otherwise the number of obstacles is inferred from position_obst_vec
    rand_seed: 2 #seed for the random generation of the obstacles
    size_obst_vec: [0.01, 0.01, 0.01] # x,y,z size of each obstacle concatenated
    position_obst_vec: [1.5, 1.5, 0.3, 1.5, 1.5, 0.6, 1.5, 1.5, 0.8999999999999999, 1.5, 1.5, 1.2, 1.5, 1.5, 1.5, 1.5, 1.5, 1.7999999999999998, 1.5, 1.5, 2.1, 1.5, 1.5, 2.4, 1.5, 1.5, 2.6999999999999997, 1.5, 1.5, 3.0, 1.5, 1.5, 3.3, 1.5, 1.5, 3.5999999999999996, 1.5, 1.5, 3.9, 1.5, 1.5, 4.2, 1.5, 1.5, 4.5, 4.5, 3.0, 0.0, 4.5, 3.0, 0.3, 4.5, 3.0, 0.6, 4.5, 3.0, 0.8999999999999999, 4.5, 3.0, 1.2, 4.5, 3.0, 1.5, 4.5, 3.0, 1.7999999999999998, 4.5, 3.0, 2.1, 4.5, 3.0, 2.4, 4.5, 3.0, 2.6999999999999997, 4.5, 3.0, 3.0, 4.5, 3.0, 3.3, 4.5, 3.0, 3.5999999999999996, 4.5, 3.0, 3.9, 4.5, 3.0, 4.2, 4.5, 3.0, 2.5, 4.5, 4.5, 0.0, 2.5, 4.5, 0.3, 2.5, 4.5, 0.6, 2.5, 4.5, 0.8999999999999999, 2.5, 4.5, 1.2, 2.5, 4.5, 1.5, 2.5, 4.5, 1.7999999999999998, 2.5, 4.5, 2.1, 2.5, 4.5, 2.4, 2.5, 4.5, 2.6999999999999997] # x,y,z position of each obstacle concatenated


    env_pc_topic: "environment_poincloud" # topic on which to publish the env pointcloud
    env_vg_topic: "environment_voxel_grid" # topic on which to publish the env voxel grid 
    env_pc_frame: "world" # origin frame of the published poinctloud
    get_grid_service_name: "get_voxel_grid" # name of the service to get the voxel grid of each agent

    save_obstacles: true # if true, save the obstacle position in pos_obs.csv as well as the pointcloud in a file